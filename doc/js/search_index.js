var search_data = {"index":{"searchIndex":["dsmga2","chromosome","dsm","ils","mixing","selection","back()","change()","deep_clone()","local_search()","new()","new()","new()","restrict()","run()","termination_criteria_meet()","tournament()"],"longSearchIndex":["dsmga2","dsmga2::chromosome","dsmga2::dsm","dsmga2::ils","dsmga2::mixing","dsmga2::selection","dsmga2::mixing::back()","dsmga2::chromosome#change()","dsmga2::chromosome#deep_clone()","dsmga2::chromosome#local_search()","dsmga2::new()","dsmga2::chromosome::new()","dsmga2::dsm::new()","dsmga2::mixing::restrict()","dsmga2#run()","dsmga2#termination_criteria_meet()","dsmga2::selection::tournament()"],"info":[["DSMGA2","","DSMGA2.html","","<p>The main class of the gem, whose algorithm intends to find a global optimal\nof a given function.\n"],["DSMGA2::Chromosome","","DSMGA2/Chromosome.html","","<p>Each instance of the class represent an individual.\n"],["DSMGA2::DSM","","DSMGA2/DSM.html","",""],["DSMGA2::ILS","","DSMGA2/ILS.html","",""],["DSMGA2::Mixing","","DSMGA2/Mixing.html","",""],["DSMGA2::Selection","","DSMGA2/Selection.html","",""],["back","DSMGA2::Mixing","DSMGA2/Mixing.html#method-c-back","(chromo, linkage_set)",""],["change","DSMGA2::Chromosome","DSMGA2/Chromosome.html#method-i-change","(range, input_array)","<p>Change the genes of the range to the value of given input_array. Raises\nIndexError if range.size is not …\n"],["deep_clone","DSMGA2::Chromosome","DSMGA2/Chromosome.html#method-i-deep_clone","(chromo)","<p>Clone the length, genes, and value of the given chromo.\n"],["local_search","DSMGA2::Chromosome","DSMGA2/Chromosome.html#method-i-local_search","()","<p>Bitwise flip and take if the fitness value increase, time-complexity is\nO(length)\n"],["new","DSMGA2","DSMGA2.html#method-c-new","(size_of_population = 27, chromo_length = 27)","<p>Initialize the population with the given size.\n"],["new","DSMGA2::Chromosome","DSMGA2/Chromosome.html#method-c-new","(item)","<p>A Fixnum or a DSMGA2::Chromosome can be passed into. The former create a\nnew Chromosome with length  …\n"],["new","DSMGA2::DSM","DSMGA2/DSM.html#method-c-new","(selected_population)",""],["restrict","DSMGA2::Mixing","DSMGA2/Mixing.html#method-c-restrict","(chromo)",""],["run","DSMGA2","DSMGA2.html#method-i-run","(pressure = 2, execute_round = 100, generation = 100)","<p>Return a DSMGA2::Chromosome with the greatest fitness.\n<p>pressure &mdash; The selection pressure for the tournament …\n"],["termination_criteria_meet","DSMGA2","DSMGA2.html#method-i-termination_criteria_meet","()","<p>Return a boolean whether the termination criteria meet or not.\n"],["tournament","DSMGA2::Selection","DSMGA2/Selection.html#method-c-tournament","(population, pressure)",""]]}}